name: 'Continuous Integration'

on: [push]

jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    env:
      DB_DATABASE: certify-test
      DB_USERNAME: root
      DB_PASSWORD: password
      BROADCAST_DRIVER: log
    services:
      mysql:
        image: mysql/mysql-server:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: certify-test
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: phpmd
          extensions: mbstring, dom, fileinfo, mysql

      - name: Start mysql service
        run: sudo /etc/init.d/mysql start

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Prepare the application
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          php artisan key:generate
      - name: Clear Config
        run: php artisan config:clear

      - name: Run Phpstan
        run: ./vendor/bin/phpstan analyse --error-format=github

      - name: Run PHP Mess Detector
        run: phpmd app github phpmd.ruleset.xml

      - name: Run phpunit with coverage
        run: php artisan test --coverage --min=100
